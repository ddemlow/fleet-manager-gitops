name: Test Deployment to dd_szt15b

on:
  pull_request:
    branches: [ master ]
    paths:
      - 'manifests/**'

jobs:
  test-deployment:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for git diff
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Get changed manifests
      id: changed-files
      run: |
        # Get list of changed manifest files
        CHANGED_FILES=$(git diff --name-only origin/master...HEAD -- 'manifests/**' | grep -E '\.(yaml|yml)$' || true)
        echo "changed_files<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # Count changed files
        CHANGED_COUNT=$(echo "$CHANGED_FILES" | grep -c . || echo "0")
        echo "changed_count=$CHANGED_COUNT" >> $GITHUB_OUTPUT
        
        echo "Changed manifest files:"
        echo "$CHANGED_FILES"
        echo "Total changed files: $CHANGED_COUNT"
    
    - name: Compile manifests
      if: steps.changed-files.outputs.changed_count > 0
      run: |
        python scripts/compile_manifests.py
    
    - name: Deploy to test cluster group
      if: steps.changed-files.outputs.changed_count > 0
      env:
        SC_FM_APIKEY: ${{ secrets.SC_FM_APIKEY }}
        FLEET_MANAGER_API_URL: https://api.scalecomputing.com/api/v2
        TEST_MODE: true
        BAIL_ON_DESTRUCTIVE_CHANGES: false
      run: |
        echo "🚀 Deploying changed manifests to test cluster group: dd_szt15b"
        echo "🧪 Using separate test applications to avoid affecting production"
        echo "📋 Lifecycle states: draft (skip), testonly (deploy), production (skip), undeploy (cleanup)"
        
        # Deploy each changed manifest in test mode
        CHANGED_FILES="${{ steps.changed-files.outputs.changed_files }}"
        for manifest in $CHANGED_FILES; do
          if [[ "$manifest" == *.container.yaml ]] || [[ "$manifest" == */containers/* ]] || [[ "$manifest" == */_compiled/* ]]; then
            echo "⏭️  Skipping container definition or compiled file: $manifest"
            continue
          fi
          echo "🧪 Deploying $manifest in test mode..."
          python scripts/test-deploy.py "$manifest"
        done
    
    - name: Create test deployment summary
      if: steps.changed-files.outputs.changed_count > 0
      run: |
        echo "## 🧪 Test Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Test Cluster Group:** \`dd_szt15b\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Changed Files:**" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.changed-files.outputs.changed_files }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. ✅ Verify the deployment in Fleet Manager UI" >> $GITHUB_STEP_SUMMARY
        echo "2. ✅ Test the deployed applications in \`dd_szt15b\` cluster group" >> $GITHUB_STEP_SUMMARY
        echo "3. ✅ If tests pass, approve this PR to deploy to production" >> $GITHUB_STEP_SUMMARY
        echo "4. ❌ If tests fail, request changes to fix issues" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Fleet Manager Links:" >> $GITHUB_STEP_SUMMARY
        echo "- [Test Cluster Group: dd_szt15b](https://fleet.scalecomputing.com/cluster-groups?org=63b8337ec6939fdfb0f716af)" >> $GITHUB_STEP_SUMMARY
        echo "- [All Deployments](https://fleet.scalecomputing.com/deployments?org=63b8337ec6939fdfb0f716af)" >> $GITHUB_STEP_SUMMARY
    
    - name: No changes detected
      if: steps.changed-files.outputs.changed_count == 0
      run: |
        echo "## ℹ️ No Manifest Changes Detected" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "No manifest files were changed in this PR, so no test deployment is needed." >> $GITHUB_STEP_SUMMARY
