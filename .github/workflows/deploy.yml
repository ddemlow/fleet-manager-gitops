name: GitOps Deployment to Fleet Manager

on:
  push:
    branches: [ main, develop, master ]
    paths:
      - 'manifests/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'manifests/**'

env:
  FLEET_MANAGER_API_URL: https://api.scalecomputing.com/api/v2

jobs:
  validate-manifests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate YAML syntax
        run: |
          echo "Validating YAML syntax..."
          for file in $(find manifests/ -name "*.yaml" -o -name "*.yml" 2>/dev/null); do
            echo "Validating $file"
            python -c "import yaml; yaml.safe_load(open('$file'))" || exit 1
          done

      - name: Validate manifest structure
        run: |
          echo "Validating manifest structure..."
          python scripts/validate-manifests.py

  deploy:
    needs: validate-manifests
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install requests pyyaml

      - name: Compile container definitions (optional)
        env:
          COMPILE_OUTPUT_DIR: manifests/_compiled
        run: |
          python scripts/compile_manifests.py || true

      - name: Debug event payload (temporary)
        run: |
          echo "Event: $GITHUB_EVENT_NAME"
          echo "Before: ${{ github.event.before }}"
          echo "After:  $GITHUB_SHA"
          if [ -f "$GITHUB_EVENT_PATH" ]; then
            cat "$GITHUB_EVENT_PATH" | jq '.head_commit | {added, modified, removed}' || true
          fi
          echo "git diff (before..after):"
          git diff --name-only "${{ github.event.before }}" "$GITHUB_SHA" | cat

      - name: Deploy to Fleet Manager
        env:
          SC_FM_APIKEY: ${{ secrets.SC_FM_APIKEY }}
        run: |
          python scripts/deploy.py

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment completed successfully"
          else
            echo "❌ Deployment failed"
          fi
