version: "1"
type: "Application"
metadata:
  name: "fetchit-gitops-vm"
  description: "GitOps VM with FetchIt container management - manages containers from this repo"
  clusterGroups:
    - DDvsns
  testClusterGroup: "dd_szt15b"
  lifecycle: production
  labels:
    - gitops
    - containers
    - fetchit

spec:
  assets:
    - name: fetchit-runtime
      type: virtual_disk
      format: raw
      url: "https://pm-westfield.s3.us-east-2.amazonaws.com/openSUSE-MicroOS.x86_64-ContainerHost-OpenStack-Cloud.raw"
  
  resources:
    - name: fetchit-gitops-vm
      type: virdomain
      spec:
        description: "GitOps VM with FetchIt - manages containers from fleet-manager-gitops repo - name {{clusterName}} id {{clusterId}}"
        cpu: 4
        memory: "4294967296"  # 4GB
        machine_type: bios
        storage_devices:
          - name: rootdisk
            source: fetchit-runtime
            boot: 1
            capacity: 50000000000  # 50GB
          - name: fetchit-storage
            type: virtio_disk
            capacity: 100000000000  # 100GB for container storage
        network_devices:
          - name: eth0
            type: virtio
        cloud_init_data:
          user_data: |
            #cloud-config
            users:
              - name: user
                groups: [wheel]
                sudo: ALL=(ALL) NOPASSWD:ALL
                shell: /bin/bash
                ssh_authorized_keys:
                  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDihWWhjoPj8KVLtdLDwNJQ71zi9An0iUFjefRWu2Eju ddemlow@scalecomputing.com
                  - github:daveddemlow
            chpasswd:
              list: |
                user:password
              expire: false
            
            
            runcmd:
              # Create directories
              - mkdir -p /opt/fetchit
              - mkdir -p /opt/nginx/html
              - mkdir -p /var/lib/containers
              - mkdir -p /var/log/fetchit
              - mkdir -p /opt/fetchit/status
              - mkdir -p /etc/fetchit
              
              # Create FetchIt config file using cat
              - |
                cat > /etc/fetchit/config.yaml << 'EOF'
                targetConfigs:
                - url: https://github.com/ddemlow/fleet-manager-gitops
                  branch: master
                  fileTransfer:
                  - name: fetchit-config
                    targetPath: fetchit/fetchit-config.yaml
                    destinationDirectory: /opt/fetchit
                    schedule: "*/5 * * * *"
                  raw:
                  - name: demo-containers
                    targetPath: fetchit/containers
                    schedule: "*/2 * * * *"
                  systemd:
                  - name: web-services
                    targetPath: fetchit/systemd
                    schedule: "*/3 * * * *"
                global:
                  logLevel: info
                  maxRetries: 3
                  retryDelay: "30s"
                EOF
              
              # Create FetchIt systemd service using cat
              - |
                cat > /etc/systemd/system/fetchit.service << 'EOF'
                [Unit]
                Description=FetchIt GitOps Container Manager
                After=network.target podman.socket
                Requires=podman.socket
                
                [Service]
                Type=simple
                ExecStart=/usr/bin/podman run --rm --name fetchit -v /etc/fetchit:/opt/mount:ro -v /run/user/1000/podman/podman.sock:/run/podman/podman.sock -v /var/lib/containers:/var/lib/containers --security-opt label=disable quay.io/fetchit/fetchit:latest
                Restart=always
                RestartSec=10
                User=user
                Group=user
                
                [Install]
                WantedBy=multi-user.target
                EOF
              
              # Enable podman socket for user
              - systemctl --user enable podman.socket --now
              - loginctl enable-linger user
              - echo "<!doctype html><html><head><meta charset=utf-8><title>FetchIt GitOps - {{clusterName}}</title><style>body{font-family:system-ui;margin:2rem;line-height:1.5}h1{color:#2563eb}.card{border:1px solid #e5e7eb;border-radius:.5rem;padding:1rem;margin:1rem 0}code{background:#f3f4f6;padding:.25rem .5rem;border-radius:.25rem}</style></head><body><h1>ðŸš€ FetchIt GitOps Container Management</h1><div class=card><p><strong>Cluster:</strong> <code>{{clusterName}}</code></p><p><strong>Cluster ID:</strong> <code>{{clusterId}}</code></p><p><strong>Managed by:</strong> fleet-manager-gitops</p><p><strong>Container Engine:</strong> Podman + FetchIt</p></div><p>This VM automatically manages containers from the GitOps repository using FetchIt.</p></body></html>" > /opt/nginx/html/index.html
              - systemctl daemon-reload
              - systemctl enable fetchit.service
              - systemctl start fetchit.service
              - sleep 10
              - systemctl status fetchit.service || true
              - podman ps || true
              - echo "FetchIt GitOps VM deployment completed at $(date)" > /opt/fetchit/status/deployment.log
              - echo "Cluster: {{clusterName}} ({{clusterId}})" >> /opt/fetchit/status/deployment.log
              - echo "Repository: https://github.com/ddemlow/fleet-manager-gitops" >> /opt/fetchit/status/deployment.log
          meta_data: |
            dsmode: local
            local-hostname: "gitops-fetchit-{{clusterName}}"
        
        tags:
          - gitops
          - fetchit
          - containers
          - demo
        state: running
