version: "1"
type: "Application"
metadata:
  name: "fetchit-gitops-vm"
  description: "GitOps VM with FetchIt container management - manages containers from this repo"
  clusterGroups:
    - DDvsns
  lifecycle: production
  labels:
    - gitops
    - containers
    - fetchit

spec:
  assets:
    - name: fetchit-runtime
      type: virtual_disk
      format: raw
      url: "https://pm-westfield.s3.us-east-2.amazonaws.com/openSUSE-MicroOS.x86_64-ContainerHost-OpenStack-Cloud.raw"
  
  resources:
    - name: fetchit-gitops-vm
      type: virdomain
      spec:
        description: "GitOps VM with FetchIt - manages containers from fleet-manager-gitops repo"
        cpu: 4
        memory: "4294967296"  # 4GB
        machine_type: q35
        storage_devices:
          - name: rootdisk
            source: fetchit-runtime
            boot: 1
            capacity: 50000000000  # 50GB
          - name: fetchit-storage
            type: virtio_disk
            capacity: 100000000000  # 100GB for container storage
        network_devices:
          - name: eth0
            type: virtio
        cloud_init_data:
          user_data: |
            #cloud-config
            users:
              - name: user
                groups: [wheel]
                sudo: ALL=(ALL) NOPASSWD:ALL
                shell: /bin/bash
                ssh_authorized_keys:
                  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDihWWhjoPj8KVLtdLDwNJQ71zi9An0iUFjefRWu2Eju ddemlow@scalecomputing.com
                  - github:daveddemlow
            chpasswd:
              list: |
                user:password
              expire: false
            
            # Install and configure FetchIt
            write_files:
              - path: /etc/fetchit/config.yaml
                content: |
                  targetConfigs:
                  - url: https://github.com/ddemlow/fleet-manager-gitops
                    branch: master
                    fileTransfer:
                    - name: fetchit-config
                      targetPath: fetchit/fetchit-config.yaml
                      destinationDirectory: /opt/fetchit
                      schedule: "*/5 * * * *"
                    raw:
                    - name: demo-containers
                      targetPath: fetchit/containers
                      schedule: "*/2 * * * *"
                    systemd:
                    - name: web-services
                      targetPath: fetchit/systemd
                      schedule: "*/3 * * * *"
                  global:
                    logLevel: info
                    maxRetries: 3
                    retryDelay: "30s"
                permissions: '0644'
                owner: root:root
              
              - path: /etc/systemd/system/fetchit.service
                content: |
                  [Unit]
                  Description=FetchIt GitOps Container Manager
                  After=network.target podman.socket
                  Requires=podman.socket
                  
                  [Service]
                  Type=simple
                  ExecStart=/usr/bin/podman run --rm \
                    --name fetchit \
                    -v /etc/fetchit:/opt/mount:ro \
                    -v /run/user/1000/podman/podman.sock:/run/podman/podman.sock \
                    -v /var/lib/containers:/var/lib/containers \
                    --security-opt label=disable \
                    quay.io/fetchit/fetchit:latest
                  Restart=always
                  RestartSec=10
                  User=user
                  Group=user
                  
                  [Install]
                  WantedBy=multi-user.target
                permissions: '0644'
                owner: root:root
            
            # Enable required services
            runcmd:
              # Enable podman socket for user
              - systemctl --user enable podman.socket --now
              - loginctl enable-linger user
              
              # Create directories
              - mkdir -p /opt/fetchit
              - mkdir -p /opt/nginx/html
              - mkdir -p /var/lib/containers
              
              # Create sample nginx content
              - echo "<h1>Welcome to GitOps-managed Nginx via FetchIt!</h1><p>Managed by: fleet-manager-gitops</p><p>Container: nginx-demo</p>" > /opt/nginx/html/index.html
              
              # Enable and start FetchIt service
              - systemctl daemon-reload
              - systemctl enable fetchit.service
              - systemctl start fetchit.service
              
              # Wait a moment for FetchIt to start
              - sleep 10
              
              # Check FetchIt status
              - systemctl status fetchit.service || true
              
              # Show running containers
              - podman ps || true
        
        tags:
          - gitops
          - fetchit
          - containers
          - demo
        state: running
