version: "1"
type: "Application"
metadata:
  name: "fetchit-gitops-quadlets"
  description: "GitOps VM with FetchIt container management - manages containers from this repo"
  clusterGroups:
    - DDvsns
  testClusterGroup: "dd_szt15b"
  lifecycle: production
  labels:
    - gitops
    - containers
    - fetchit

spec:
  assets:
    - name: fetchit-runtime
      type: virtual_disk
      format: raw
      url: "https://pm-westfield.s3.us-east-2.amazonaws.com/openSUSE-MicroOS.x86_64-ContainerHost-OpenStack-Cloud.raw"
  
  resources:
    - name: fetchit-gitops
      type: virdomain
      spec:
        description: "GitOps VM with FetchIt"
        cpu: 4
        memory: "4294967296"  # 4GB
        machine_type: bios
        storage_devices:
          - name: rootdisk
            source: fetchit-runtime
            boot: 1
            capacity: 50000000000  # 50GB
          - name: fetchit-storage
            type: virtio_disk
            capacity: 100000000000  # 100GB for container storage
        network_devices:
          - name: eth0
            type: virtio
        cloud_init_data:  # note microos does not support write_files: as an immutable os
          user_data: |
            #cloud-config
            users:
              - name: user
                plain_text_passwd: "password"
                lock_passwd: false
                groups: ["wheel"]
                sudo: ["ALL=(ALL) NOPASSWD:ALL"]
                ssh_authorized_keys:
                  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDihWWhjoPj8KVLtdLDwNJQ71zi9An0iUFjefRWu2Eju ddemlow@scalecomputing.com
            ssh_pwauth: true
            disable_root: false
            ssh_import_id: ["gh:ddemlow"]
            runcmd:
              - systemctl enable podman.socket
              - systemctl enable --now podman-auto-update.timer
              - mkdir -p /etc/containers/systemd
              
              # Create directories for FetchIt
              - mkdir -p /var/lib/containers
              - mkdir -p /opt/fetchit
              - mkdir -p /var/log/fetchit
              - mkdir -p /var/www
              - |
                cat <<'EOF' > /var/www/index.html
                <!DOCTYPE html>
                <html>
                <head>
                    <title>FetchIt GitOps Demo</title>
                    <style>
                        body { font-family: Arial, sans-serif; margin: 40px; background: #f8f9fa; }
                        .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                        h1 { color: #2c3e50; text-align: center; }
                        .services { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin: 30px 0; }
                        .service { background: #f8f9fa; padding: 20px; border-radius: 8px; border-left: 4px solid #007bff; }
                        .service h3 { margin-top: 0; color: #007bff; }
                        .status { color: #28a745; font-weight: bold; }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <h1>üöÄ FetchIt GitOps Demo</h1>
                        <p class="status">‚úÖ GitOps infrastructure is running!</p>
                        
                        <div class="services">
                            <div class="service">
                                <h3>Demo Web App</h3>
                                <p><strong>Port:</strong> 8080</p>
                                <p><strong>URL:</strong> <a href="http://localhost:8080">localhost:8080</a></p>
                                <p>Kubernetes manifest deployment</p>
                            </div>
                            
                            <div class="service">
                                <h3>Nginx Demo</h3>
                                <p><strong>Port:</strong> 8081</p>
                                <p><strong>URL:</strong> <a href="http://localhost:8081">localhost:8081</a></p>
                                <p>Kubernetes manifest deployment</p>
                            </div>
                            
                            <div class="service">
                                <h3>Simple Web App</h3>
                                <p><strong>Port:</strong> 9090</p>
                                <p><strong>URL:</strong> <a href="http://localhost:9090">localhost:9090</a></p>
                                <p>Direct container deployment</p>
                            </div>
                        </div>
                        
                        <p><strong>Managed by:</strong> FetchIt GitOps Agent</p>
                        <p><strong>Repository:</strong> <a href="https://github.com/ddemlow/fleet-manager-gitops">GitHub</a></p>
                    </div>
                </body>
                </html>
                EOF
              - mkdir -p /var/www/nginx
              - |
                cat <<'EOF' > /var/www/nginx/index.html
                <!DOCTYPE html>
                <html>
                <head>
                    <title>Nginx Demo - GitOps</title>
                    <style>
                        body { font-family: Arial, sans-serif; margin: 40px; background: #fff5f5; }
                        .container { max-width: 600px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                        h1 { color: #e74c3c; }
                        .status { color: #27ae60; font-weight: bold; }
                        .info { background: #fdf2f2; padding: 15px; border-radius: 5px; margin: 20px 0; }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <h1>üåê Nginx Demo</h1>
                        <p class="status">‚úÖ Successfully deployed via GitOps!</p>
                        <div class="info">
                            <h3>Container Info:</h3>
                            <p><strong>Port:</strong> 8081</p>
                            <p><strong>Image:</strong> nginx-slim:0.8</p>
                            <p><strong>Method:</strong> Kubernetes Manifest</p>
                            <p><strong>Managed by:</strong> FetchIt GitOps</p>
                        </div>
                        <p>This page is served from a volume mount at <code>/var/www/nginx</code></p>
                    </div>
                </body>
                </html>
                EOF
              - mkdir -p /var/www/demo
              - chmod -R 755 /var/www
              - chown -R root:root /var/www
              - chmod -R 644 /var/www/demo/
              - chmod -R 644 /var/www/nginx/
              - chown -R 101:101 /var/www/demo/
              - chown -R 101:101 /var/www/nginx/
              
              # Restart containers to pick up new content
              - sleep 10
              - podman restart demo-web-demo-container || true
              - podman restart nginx-demo-nginx-container || true
              - |
                cat <<'EOF' > /var/www/demo/index.html
                <!DOCTYPE html>
                <html>
                <head>
                    <title>Demo Web App - GitOps</title>
                    <style>
                        body { font-family: Arial, sans-serif; margin: 40px; background: #f0f8ff; }
                        .container { max-width: 600px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                        h1 { color: #2c3e50; }
                        .status { color: #27ae60; font-weight: bold; }
                        .info { background: #ecf0f1; padding: 15px; border-radius: 5px; margin: 20px 0; }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <h1>üöÄ Demo Web App</h1>
                        <p class="status">‚úÖ Successfully deployed via GitOps!</p>
                        <div class="info">
                            <h3>Container Info:</h3>
                            <p><strong>Port:</strong> 8080</p>
                            <p><strong>Image:</strong> nginx-slim:0.9</p>
                            <p><strong>Method:</strong> Kubernetes Manifest</p>
                            <p><strong>Managed by:</strong> FetchIt GitOps</p>
                        </div>
                        <p>This page is served from a volume mount at <code>/var/www/demo</code></p>
                    </div>
                </body>
                </html>
                EOF
              
              # Create FetchIt bootstrap config - authoritative config loaded via configReload
              - |
                cat <<'EOF' > /opt/fetchit/config.yaml
                configReload:
                  schedule: "*/5 * * * *"
                  configUrl: https://raw.githubusercontent.com/ddemlow/fleet-manager-gitops/master/fetchit/fetchit-config.yaml
                targetConfigs:
                - url: https://github.com/ddemlow/fleet-manager-gitops
                  branch: master
                  kube:
                  - name: demo-services
                    targetPath: fetchit/kube
                    schedule: "*/2 * * * *"
                global:
                  logLevel: info
                  maxRetries: 3
                  retryDelay: "30s"
                EOF
              
              # Create FetchIt systemd service file
              - |
                cat <<'EOF' > /etc/systemd/system/fetchit.service
                [Unit]
                Description=FetchIt GitOps Container Manager
                After=network.target podman.socket
                Requires=podman.socket

                [Service]
                Type=simple
                ExecStart=/usr/bin/podman run --rm --name fetchit -v /opt/fetchit:/opt/mount:rw -v /var/lib/containers:/var/lib/containers:rw -v /run/podman/podman.sock:/run/podman/podman.sock:ro -v /etc/systemd/system:/etc/systemd/system:rw -e SYSTEMD_USER=false --security-opt label=disable quay.io/fetchit/fetchit:latest
                Restart=always
                RestartSec=10
                User=root
                Group=root

                [Install]
                WantedBy=multi-user.target
                EOF
              
              # Ensure user is in the right groups for container access
              - usermod -a -G wheel,root user || true
              
              # Start podman socket for system-wide access
              - systemctl start podman.socket
              
              # Reload systemd and trigger quadlet generation
              - systemctl daemon-reload
              - sleep 5
              
              # Try to enable the service (this should trigger quadlet generation)
              - systemctl enable fetchit.service || true
              
              # If that doesn't work, try to start it directly
              - systemctl start fetchit.service || true
              
              
              # install qemu-guest-agent transactionally; MicroOS will handle this via reboot/override below
              - transactional-update --non-interactive pkg install qemu-guest-agent
              
              - |
                cat <<'EOF' > /etc/systemd/system/enable-qemu-guest-agent.service
                [Unit]
                Description=Enable qemu-guest-agent post-reboot
                After=multi-user.target
                
                [Service]
                Type=oneshot
                ExecStart=/usr/bin/systemctl enable --now qemu-guest-agent.service
                RemainAfterExit=yes
                
                [Install]
                WantedBy=multi-user.target
                EOF
              - mkdir -p /etc/systemd/system/qemu-guest-agent.service.d
              - |
                cat <<'EOF' > /etc/systemd/system/qemu-guest-agent.service.d/override.conf
                [Unit]
                Requires=
                After=
                EOF
              - systemctl enable enable-qemu-guest-agent.service
              - reboot
          meta_data: |
            dsmode: local
            local-hostname: "gitops-fetchit-vm"
        
        tags:
          - gitops
          - fetchit
          - containers
          - demo
        state: running
